name: pipeline docker build for production environment - frontend

on:
  workflow_run:
    workflows: ["pipeline for production environment - backend"]
    types:
      - completed



jobs:
  build-and-push-frontend-production:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout specific branch 
        uses: actions/checkout@v3
        with:
          ref: 'test'  

      - name: Log in to Google Cloud
        uses: google-github-actions/auth@v1
        id: auth
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      
      - name: Configure Docker to use Google Cloud credentials
        run: |
          gcloud auth configure-docker europe-west1-docker.pkg.dev

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Get Cloud Run URL and Set as Env Variable
        run: |
          SERVICE_NAME="mutualism-backend-prod"
          REGION="europe-west1"
          PROJECT_ID="buzzwatch-422510"  # Your Google Cloud project ID
          URL=$(gcloud run services describe $SERVICE_NAME --region $REGION --project $PROJECT_ID --format 'value(status.url)')
          echo "Cloud Run URL is: $URL"
          echo "REACT_APP_EXTERNAL_IP=$URL" >> frontend/web/.env
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }} 
      
      - name: Fetch Latest Release Tag
        id: get_latest_release
        run: |
          LATEST_TAG=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV


      - name: Build test frontend Docker image
        run: |
          IMAGE_NAME="europe-west1-docker.pkg.dev/buzzwatch-422510/mutualism/mutualism-frontend-prod"
          docker build -t "$IMAGE_NAME:${{ env.LATEST_TAG }}" frontend


      - name: Push test frontend Docker image to GCR
        run: |
          IMAGE_NAME="europe-west1-docker.pkg.dev/buzzwatch-422510/mutualism/mutualism-frontend-prod"  
          docker push "$IMAGE_NAME:${{ env.LATEST_TAG }}"

     