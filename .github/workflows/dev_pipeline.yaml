name: Sonaqube Quality Gate Check

on:
  pull_request:
    branches:
      - Development
  
permissions: 
  contents: read
  pull-requests: write

jobs:
  Unit_Tests_and_SonarQube_Scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code  
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
     
      - name: Start VM instance
        run: |
          gcloud compute instances start sonarqube --zone=europe-west1-d

      - name: Get VM public IP
        id: get_ip
        run: |
          IP_ADDRESS=$(gcloud compute instances describe sonarqube \
                       --zone=europe-west1-d \
                       --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          echo "SONAR_HOST_URL=http://$IP_ADDRESS:9000" >> $GITHUB_ENV

      - name: Wait for SonarQube to be available
        run: |
          echo "Waiting for SonarQube to be available at $SONAR_HOST_URL"
          
          while : ; do
            RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" $SONAR_HOST_URL || true) 
            
            if [[ "$RESPONSE" == "200" ]]; then
              echo "SonarQube is now available!"
              break
            else
              echo "SonarQube not available yet. Response code: $RESPONSE. Retrying..."
              sleep 5
            fi
          done
          sleep 20
        env:
            SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}


      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js Dependencies for web
        run: |
          cd frontend/web
          npm install

      - name: Run React.js Tests with Coverage for web 
        run: |
          cd frontend/web
          npm run test -- --coverage

      - name: Install Node.js Dependencies for mobile
        run: |
          cd frontend/mobile
          npm install

      - name: Run React.js Tests with Coverage for mobile
        run: |
          cd frontend/mobile
          npm run test -- --coverage

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python Dependencies
        run: |
          cd backend/
          python -m pip install --upgrade pip
          pip install tox coverage pytest pytest-cov

      - name: change tox.ini
        run: sed -i 's/SECRET_KEY = .*/SECRET_KEY = ${{ secrets.SECRET_KEY }}/' tox.ini

      - name: Run Python Tests with Coverage
        run: |
          cd backend/
          tox -e py
          # coverage run --source=. -m pytest
          # coverage xml -o coverage.xml
      

      - name: SonarQube Scan 
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }} 

      - uses: phwt/sonarqube-quality-gate-action@v1
        id: quality-gate-check
        with:
          sonar-project-key: Mutualism
          sonar-host-url: ${{ env.SONAR_HOST_URL }}
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }} 

      - name: Output result
        run: |
          echo "${{ steps.quality-gate-check.outputs.project-status }}"
          echo "${{ steps.quality-gate-check.outputs.quality-gate-result }}"
 
      - name: Stop VM instance
        run: |
          gcloud compute instances stop sonarqube --zone=europe-west1-d

